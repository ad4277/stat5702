---
title: "Community Project  \n Sorting Text Data with parcoords()"
author: ad4277
execute:
  echo: true
format:
  html:
    fig-width: 6
    fig-height: 4
    embed-resources: true
    df-print: kable
    code-overflow: wrap

---


```{r}
#| echo: false
rm(list = ls())
```

```{r}
#| message: false
#| warning: false

# Importing Libraries
library(tidyverse)
library(parcoords)
library(knitr)
```



## Preparing data

Loading the data

```{r}
library(fivethirtyeight)
pulitzer_data <- pulitzer
```


```{r}
#| echo: false
pulitzer_data <- pulitzer_data |> 
  rename(
    nf_1990_2003 = num_finals1990_2003,
    nf_2004_2014 = num_finals2004_2014,
    nf_1990_2014 = num_finals1990_2014
  )
```

\
\
Creating Sample with 15 rows

```{r}
pulitzer_data_15 <-
  pulitzer_data |>
  arrange(newspaper) |>
  head(15)
```

\
\
Parallel coordinates plot

```{r}
#| fig-width: 7
#| fig-height: 4
parcoords(pulitzer_data_15[, c("newspaper","circ2004","circ2013")]
          , rownames = FALSE
          , alpha = 0.4)
```



\
\

## Index Column

Creating an Index Column for `Newspaper`

```{r}
pulitzer_data_15 |> 
  select(newspaper) |>
  arrange(desc(newspaper)) |>
  mutate(number = row_number()) |> 
  arrange(newspaper)
```


\
\

Testing different methods to create an Index


```{r}
pulitzer_data_index <-
  pulitzer_data_15 |> 
  select(newspaper) |>
  arrange(desc(newspaper)) |>
  mutate(number              = row_number()) |> 
  mutate(number_with_padding = sprintf("%05d", row_number())) |> 
  mutate(string              = paste0("idx-", row_number())) |> 
  mutate(string_with_padding = paste0("idx-",sprintf("%05d", row_number()))) |> 
  arrange(newspaper)
```


```{r}
#| echo: False
kable(pulitzer_data_index, align = "l")
```

\
\


Plotting all Indexes:

```{r}
parcoords(pulitzer_data_index[, c("newspaper", 
                                  "string_with_padding", 
                                  "number", 
                                  "number_with_padding", 
                                  "string")]
          , rownames = FALSE
          , brushMode = "1D-axes"
          , alpha = 0.4
          , alphaOnBrushed = 0.2)
```



\
\

Comparing Original column vs Index column

```{r}
pulitzer_data_index_renamed <-
  pulitzer_data |> 
  select(newspaper) |>
  arrange(newspaper) |>  head(15) |>
  arrange(desc(newspaper)) |>
  mutate(string_with_padding  = paste0("idx-",sprintf("%05d", row_number()))) |> 
  mutate(newspaper_index      = paste0("idx-",sprintf("%05d", row_number())))
```


```{r}
#| fig-width: 7
#| fig-height: 4.5

parcoords(pulitzer_data_index_renamed, 
          , rownames = FALSE
          , brushMode = "1D-axes"
          , alpha = 0.4
          , alphaOnBrushed = 0.2)
```

\
\
Vector of names for Axis Tick Values

```{r}
# Method 1:
sorted_newspapers_names <- sort(unique(pulitzer_data_index$newspaper))

# Method 2:
sorted_newspapers_names <- 
  pulitzer_data_index |> 
  distinct(newspaper) |> 
  arrange(newspaper) |> 
  pull(newspaper)
```

```{r}
#| echo: False
sorted_newspapers_names
```


\
\

Overwrite `axis title` and `tick values` inside axis \


```{r}
#| fig-width: 7
#| fig-height: 4.5

# Using the new index column, we will use the parameter `dimensions` to overwrite the name of the axis and tick values with the newspaper values.

parcoords(pulitzer_data_index_renamed[, c(
                            "newspaper",
                            "string_with_padding",
                            "newspaper_index"
                            )], 
          , rownames = FALSE
          , brushMode = "1D-axes"
          , alpha = 0.4 
          , alphaOnBrushed = 0.2
          , dimensions = list(
                  newspaper_index = list(
                        title = "newspaper_sorted",
                        tickValues = sorted_newspapers_names))
          )
```

\
\
\
\
\
\

## Example with Full Dataset:

```{r}
#| fig-width: 7
#| fig-height: 6

pulitzer_data_all <-
  pulitzer_data |> 
  arrange(desc(newspaper)) |>
  mutate(newspaper_index = paste0("idx-",sprintf("%05d", row_number()))) 

parcoords(pulitzer_data_all[, c(
                            "newspaper_index",
                            "circ2004", 
                            "circ2013", 
                            "pctchg_circ",
                            "nf_1990_2003",
                            "nf_2004_2014",
                            "nf_1990_2014"
                            )], 
          , rownames = FALSE
          , brushMode = "1D-axes"
          , reorderable = T
          , alpha = 0.8
          , alphaOnBrushed = 0.2
          , dimensions = list(
                newspaper_index = list(
                      title = "newspaper",
                      tickValues = sort(unique(pulitzer_data_all$newspaper))))
          )
```


\
\
\
\
\
\

**Adding custom sort to Outliers**\

```{r}
#| fig-width: 7
#| fig-height: 6
#| echo: False

pulitzer_data_outliers <-
  pulitzer_data |> 
  arrange(desc(newspaper)) |> 
  mutate(order_sequence = paste0("000-",sprintf("%05d", row_number()))) |> 
  mutate(outliers_rank = ifelse(newspaper %in% c('USA Today',
                                                 'New York Times',
                                                 'Wall Street Journal',
                                                 'Los Angeles Times',
                                                 'Washington Post'),'03-High',
                                ifelse(newspaper %in% c(
                                  'Rocky Mountain News',
                                  'New Orleans Times-Picayune'),'01-Low',
                                  '02-Not an Outlier') ))
  
outliers_colors <- c("red", "gray","blue") 

# Parallel coordinates plot with color by outliers
parcoords(
  pulitzer_data_outliers[, c("order_sequence", 
                            # "newspaper",
                            "circ2004", 
                            "circ2013", 
                            "pctchg_circ", 
                            "nf_1990_2003", 
                            "nf_2004_2014",
                            "nf_1990_2014",
                            "outliers_rank")], 
  rownames = FALSE,
  brushMode = "1D-axes",
  reorderable = TRUE,
  queue = TRUE,
  alpha = 0.8,
  alphaOnBrushed = 0.2,
  height = 550,
  dimensions = list(
    order_sequence = list(
      title = "newspaper",
      tickValues = sort(unique(pulitzer_data_outliers$newspaper))
    ),
    outliers_rank = list(
      title = "outliers_rank",
      tickValues = c("High","Not and Outlier","Low")
    )
    
  ),
  color = list(
    colorBy = "outliers_rank",  
    colorScale = "scaleOrdinal",
    colorScheme = outliers_colors
  ),
  withD3 = TRUE
)
  
  
```


\
\
\
\
\
\
\



::: panel-tabset
## Outliers Example

**Preparing data:**\

```{r}
#| fig-width: 10
#| fig-height: 6


pulitzer_data_outliers <-
  pulitzer_data |> 
  arrange(desc(newspaper)) |> 
  mutate(newspaper_index = paste0("000-",sprintf("%05d", row_number()))) |> 
  mutate(outliers_rank_index = ifelse(newspaper %in% c('USA Today',
                                                 'New York Times',
                                                 'Wall Street Journal',
                                                 'Los Angeles Times',
                                                 'Washington Post'),'03-High',
                                ifelse(newspaper %in% c(
                                  'Rocky Mountain News',
                                  'New Orleans Times-Picayune'),'01-Low',
                                  '02-Not an Outlier') ))
```




\
\
**Chart:**\

```{r}
#| fig-width: 7
#| fig-height: 6
parcoords(
  pulitzer_data_outliers[, c("newspaper_index", 
                             "circ2004", 
                             "circ2013", 
                             "pctchg_circ", 
                             "nf_1990_2003", 
                             "nf_2004_2014",
                             "nf_1990_2014",
                             "outliers_rank_index")], 
  rownames = FALSE,
  brushMode = "1D-axes",
  reorderable = TRUE,
  alpha = 0.8,
  alphaOnBrushed = 0.2,
  dimensions = list(
        newspaper_index = list(
              title = "newspaper",
              tickValues = sort(unique(pulitzer_data_outliers$newspaper))),
        outliers_rank_index = list(
              title = "outliers_rank",
              tickValues = c("High","Not an Outlier","Low"))
        ),
  color = list(
        colorBy = "outliers_rank_index",  
        colorScale = "scaleOrdinal",
        colorScheme = c("red", "gray","blue")),
  withD3 = TRUE
  )

```
:::




